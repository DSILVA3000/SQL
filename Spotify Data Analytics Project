#For this project, I downloaded Spotify data from Kaggle.
#Then I created a table to indert Spotify data into.
#Finally, I performed analytics on the data using SQL.

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL)

#I then inserted the Spotify Data .csv into the table.
#Next, I explored the data using the following SQL.

SELECT * FROM BIT_DB.Spotifydata;
#By doing this I could see what was in the data.
#Then I started my quieries.

#First, I determined the average popularity, danceability, and energy by artist and track.
SELECT artist_name, track_name, avg(popularity),avg(danceability),avg(energy)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name;

#Then I determined the time signatures by artist and track.
SELECT track_name, artist_name, time_signature
FROM BIT_DB.spotifydata
ORDER BY time_signature desc
LIMIT 20;

#Then loudness limiting the response to 10.
SELECT track_name, artist_name, loudness
FROM BIT_DB.spotifydata
ORDER BY loudness desc
LIMIT 10;

#Then average energy.
SELECT track_name, artist_name, avg(energy)
FROM BIT_DB.spotifydata
GROUP BY track_name, artist_name;

#Energy and tempo limiting the response to 20.
SELECT track_name, artist_name, avg(energy), avg(tempo)
FROM BIT_DB.spotifydata
GROUP BY track_name, artist_name;
LIMIT 20;
#Tempo.
SELECT track_name, artist_name, AVG(tempo)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name;

#And finally, I determined who the Top 10 artists are by popularity.
SELECT track_name, artist_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity desc
LIMIT 10;
